import argparse
import os
import shutil
from pathlib import Path

def copy_file_with_dirs(src, dst):
    try:
        dst = os.path.abspath(dst)
        dst_dir = os.path.dirname(dst)
        if dst_dir and not os.path.exists(dst_dir):
            os.makedirs(dst_dir)
        print(f'Coping {src} to {dst}')
        shutil.copy2(src, dst)
        return True
    except Exception as e:
        print(f"Error copying file: {e}")
        return False

parser = argparse.ArgumentParser(
    prog="parse_params", 
    description="parse .params file generated by bazel, collect dependent libraries",
    epilog="Thank for using WindTools-%(prog)s!"
)
parser.add_argument(dest="file", help="full path of .params file")
parser.add_argument("-o", dest="lib_folder", help="folder libraries are copied to", default='libs')
args = parser.parse_args()

with open(args.file, 'r') as f:
    params_folder = args.file[0:args.file.find('bazel-out')]
    print(params_folder)
    for line in f:
        line = line.strip()
        #print(line)
        if 'bazel-out' in line and line.endswith('lib'):
            lib = line[line.find('bazel-out'):]
            lib_name = Path(lib).name
            lib_path = params_folder + lib
            copy_file_with_dirs(lib_path, os.path.join(args.lib_folder, lib))

